#!/bin/bash
help(){
        cat <<EOF 
        usage ts_reset_panel [OPTION]
        -h              prints this message
        -u [USERNAME]   specify the user whose panels will be reset.

	Resets gnome panels to their default state. 
EOF
        exit 0
}

# source common functions
FUNCTIONS=ts_functions.sh # /path/to../
source $FUNCTIONS

### MAIN ###

### process options ###

while getopts ":hu:" option; do
        case $option in
                h) help
                   exit
                ;;
                u) user=$OPTARG
		;;
                /?) help
                    exit
                ;;
        esac
done

if [[ -z $user ]]; then
        user=$EUID
else
        uid_test=$(test_for_uid $user)
        if [[ -z $uid_test ]]; then
                echo "$user not found! exiting..."
                exit 2
        else
                root_test=$(test_for_root)
                if [[ $root_test -ne 0 ]]; then
                        echo "You are not root! exiting..."
                        exit 2  
                fi
        fi
fi


# reset panel second stage maybe unnecessary need to test

# check to see if we are changing own or somebody elses settings
# probably better doing it her in case somebody is running -u on themselves
# --direct option can only be used if gconfd is not running as that users session
if [[ $(test_for_uid $user) -eq $EUID ]] && [[  $(pidof gconfd-2) ]]; then
	GCONF_RESET="gconftool-2 --recursive-unset"
else
	GCONF_RESET="gconftool-2 --direct --config-source=xml::/home/$user/.gconf --recursive-unset" 
fi 

$GCONF_RESET /apps/panel
if [[ $? -ne 0 ]]; then
	echo "gconf failed to reset" 
	EXIT=1
fi

rm -rf /home/$user/.gconf/apps/panel
if [[ $? -ne 0 ]]; then
        echo "gconf failed to reset" 
        EXIT=1
fi

pkill gnome-panel 
if [[ $? -ne 0 ]]; then
        echo "failed to restart gnome-panel" 
        EXIT=1
fi
 
if [[ -z  $EXIT ]] ; then
	exit $EXIT
else
	exit 0
fi  
