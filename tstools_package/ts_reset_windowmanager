#!/bin/bash
help(){
        cat <<EOF 
        usage ts_reset_ windowmanger [OPTION]
        -h              prints this message
        -u [USERNAME]   specify the user whose desktop will be reset.
	
	Resets a users desktop/windowmanager to the default settings.
	This will reset ALL of a users desktop settings. Don't use it to reset the panel, use ts_reset_panel. This should only be used if things are really mesesed up.
EOF
        exit 0
}

# source common functions
FUNCTIONS=ts_functions.sh # /path/to../
source $FUNCTIONS

### MAIN ###

### process options ###
while getopts ":hu:" option; do
        case $option in
                h) help
                   exit
                ;;
                u) user=$OPTARG
		;;
                /?) help
                    exit
                ;;
        esac
done

if [[ -z $user ]]; then
        user=$EUID
else
	uid_test=$(test_for_uid $user)
	if [[ -z $uid_test ]]; then
		echo "$user not found! exiting..."
		exit 2
	else
		root_test=$(test_for_root)
		if [[ $root_test -ne 0 ]]; then
			echo "You are not root! exiting..."
			exit 2	
		fi
	fi
fi

### reset desktop ###

# check to see if we are changing own or somebody elses settings
# probably better doing it her in case somebody is running -u on themselves
# --direct option can only be used if gconfd is not running as that users session
if [[ $(test_for_uid $user) -eq $EUID ]] && [[  $(pidof gconfd-2) ]]; then
        GCONF_RESET="gconftool-2 --recursive-unset"
else
        GCONF_RESET="gconftool-2 --direct --config-source=xml::/home/$user/.gconf --recursive-unset" 
fi

# recursive uset of gnome schemas
for setting in /apps/compiz /apps/metacity /desktop/gnome/session /schemas/desktop/gnome/session
do	
	$GCONF_RESET $setting 
	if [[ $? -ne 0 ]]; then
        	echo "gconf failed to reset" 
        	EXIT=1
	fi
done

if [[ -z  $EXIT ]] ; then
        exit $EXIT
else
        exit 0
fi

